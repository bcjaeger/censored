% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/survival_reg.R
\name{survival_reg}
\alias{survival_reg}
\title{Parsnip Engines for Parametric Survival Models}
\description{
These are engines for the \code{\link[parsnip:survival_reg]{parsnip::survival_reg()}} model specification.

\code{survival_reg()} is a way to generate a \emph{specification} of a model
before fitting and allows the model to be created using
R. The main argument for the
model is:
\itemize{
\item \code{dist}: The probability distribution of the outcome.
}
This argument is converted to its specific names at the
time that the model is fit. Other options and argument can be
set using \code{set_engine()}. If left to its default
here (\code{NULL}), the value is taken from the underlying model
functions.

Since survival models typically involve censoring (and require the use of
\code{\link[survival:Surv]{survival::Surv()}} objects), the \code{\link[=fit]{fit()}} function will require that the
survival model be specified via the formula interface.

Also, for the \code{flexsurv::flexsurvfit} engine, the typical
\code{strata} function cannot be used. To achieve the same effect,
the extra parameter roles can be used (as described above).

The model can be created using the \code{fit()} function using the
following \emph{engines}:
\itemize{
\item \pkg{R}:  \code{"flexsurv"}, \code{"survival"} (the default)
}
}
\section{Engine Details}{
Engines may have pre-set default arguments when executing the model fit
call. For this type of model, the template of the fit calls are below.
\subsection{flexsurv}{\if{html}{\out{<div class="sourceCode r">}}\preformatted{survival_reg() \%>\% 
  set_engine("flexsurv") \%>\% 
  set_mode("censored regression") \%>\% 
  translate()
}\if{html}{\out{</div>}}\preformatted{## Parametric Survival Regression Model Specification (censored regression)
## 
## Computational engine: flexsurv 
## 
## Model fit template:
## flexsurv::flexsurvreg(formula = missing_arg(), data = missing_arg(), 
##     weights = missing_arg())
}
}

\subsection{survival}{\if{html}{\out{<div class="sourceCode r">}}\preformatted{survival_reg() \%>\% 
  set_engine("survival") \%>\% 
  set_mode("censored regression") \%>\% 
  translate()
}\if{html}{\out{</div>}}\preformatted{## Parametric Survival Regression Model Specification (censored regression)
## 
## Computational engine: survival 
## 
## Model fit template:
## survival::survreg(formula = missing_arg(), data = missing_arg(), 
##     weights = missing_arg(), model = TRUE)
}

Note that \code{model = TRUE} is needed to produce quantile predictions when
there is a stratification variable and can be overridden in other cases.

\code{fit()} passes the data directly to \code{survival::curvreg()} so that its
formula method can create dummy variables as-needed.
}

\subsection{Parameter translations}{

The standardized parameter names in parsnip can be mapped to their
original names in each engine that has main parameters. Each engine
typically has a different default value (shown in parentheses) for each
parameter.\tabular{lll}{
   \strong{parsnip} \tab \strong{survival} \tab \strong{flexsurv} \cr
   dist \tab dist \tab dist \cr
}

}
}

\references{
Jackson, C. (2016). \code{flexsurv}: A Platform for Parametric Survival
Modeling in R. \emph{Journal of Statistical Software}, 70(8), 1 - 33.
}
\seealso{
\code{\link[parsnip:survival_reg]{parsnip::survival_reg()}}, \code{\link[parsnip:reexports]{parsnip::fit()}}, \code{\link[survival:Surv]{survival::Surv()}}
}
